//
//  48KRomLabels.mm
//  SpectREM
//
//  Created by Adrian Brown on 06/02/2017.
//  Copyright Â© 2017 71Squared Ltd. All rights reserved.
//

#import <Foundation/Foundation.h>
#import "AddressLabels.h"

static AddressLabel addressLabels_48KRom[] =
{
	{ 0x0000, "START" },
	{ 0x0008, "ERROR_1" },
	{ 0x0010, "PRINT_A_1" },
	{ 0x0018, "GET_CHAR" },
	{ 0x001C, "TEST_CHAR" },
	{ 0x0020, "NEXT_CHAR" },
	{ 0x0028, "FP_CALC" },
	{ 0x0030, "BC_SPACES" },
	{ 0x0038, "MASK_INT" },
	{ 0x0053, "ERROR_2" },
	{ 0x0066, "RESET" },
	{ 0x0074, "CH_ADD+1" },
	{ 0x007D, "SKIP_OVER" },
	{ 0x028E, "KEY_SCAN" },
	{ 0x02BF, "KEYBOARD" },
	{ 0x0310, "K_REPEAT" },
	{ 0x031E, "K_TEST" },
	{ 0x0333, "K_DECODE" },
	{ 0x03B5, "BEEPER" },
	{ 0x03F8, "BEEP" },
	{ 0x04C2, "SA_BYTES" },
	{ 0x053F, "SA_LD_RET" },
	{ 0x0556, "LD_BYTES" },
	{ 0x05E3, "LD_EDGE_2" },
	{ 0x05E7, "LD_EDGE_1" },
	{ 0x0605, "SAVE_ETC" },
	{ 0x07CB, "VR_CONTRL" },
	{ 0x0802, "LD_BLOCK" },
	{ 0x0808, "LD_CONTRL" },
	{ 0x08B6, "ME_CONTRL" },
	{ 0x092C, "ME_ENTER" },
	{ 0x0970, "SA_CONTRL" },
	{ 0x09F4, "PRINT_OUT" },
	{ 0x0A23, "PO_BACK_1" },
	{ 0x0A3D, "PO_RIGHT" },
	{ 0x0A4F, "PO_ENTER" },
	{ 0x0A5F, "PO_COMMA" },
	{ 0x0A69, "PO_QUEST" },
	{ 0x0A6D, "PO_TV_2" },
	{ 0x0AD9, "PO_ABLE" },
	{ 0x0ADC, "PO_STORE" },
	{ 0x0B03, "PO_FETCH" },
	{ 0x0B24, "PO_ANY" },
	{ 0x0B7F, "PR_ALL" },
	{ 0x0BDB, "PO_ATTR" },
	{ 0x0C0A, "PO_MSG" },
	{ 0x0C3B, "PO_SAVE" },
	{ 0x0C41, "PO_SEARCH" },
	{ 0x0C55, "PO_SCR" },
	{ 0x0D4D, "TEMPS" },
	{ 0x0D6B, "CLS" },
	{ 0x0DAF, "CL_ALL" },
	{ 0x0DD9, "CL_SET" },
	{ 0x0DFE, "CL_SC_ALL" },
	{ 0x0E44, "CL_LINE" },
	{ 0x0E88, "CL_ATTR" },
	{ 0x0E9B, "CL_ADDR" },
	{ 0x0EAC, "COPY" },
	{ 0x0ECD, "COPY_BUFF" },
	{ 0x0EDF, "CLEAR_PRB" },
	{ 0x0EF4, "COPY_LINE" },
	{ 0x0F2C, "EDITOR" },
	{ 0x0F81, "ADD_CHAR" },
	{ 0x0FA9, "ED_EDIT" },
	{ 0x0FF3, "ED_DOWN" },
	{ 0x1007, "ED_LEFT" },
	{ 0x100C, "ED_RIGHT" },
	{ 0x1015, "ED_DELETE" },
	{ 0x1024, "ED_IGNORE" },
	{ 0x1031, "ED_EDGE" },
	{ 0x1059, "ED_UP" },
	{ 0x107F, "ED_SYMBOL" },
	{ 0x1097, "CLEAR_SP" },
	{ 0x10A8, "KEY_INPUT" },
	{ 0x111D, "ED_COPY" },
	{ 0x1190, "SET_HL" },
	{ 0x11A7, "REMOVE_FP" },
	{ 0x11B7, "NEW" },
	{ 0x11CB, "START/NEW" },
	{ 0x12A2, "MAIN_EXEC" },
	{ 0x155D, "MAIN_ADD" },
	{ 0x15D4, "WAIT_KEY" },
	{ 0x15E6, "INPUT_AD" },
	{ 0x15EF, "OUT_CODE" },
	{ 0x15F2, "PRINT_A_2" },
	{ 0x1601, "CHAN_OPEN" },
	{ 0x1615, "CHAN_FLAG" },
	{ 0x1634, "CHAN_K" },
	{ 0x1642, "CHAN_S" },
	{ 0x164D, "CHAN_P" },
	{ 0x1652, "ONE_SPACE" },
	{ 0x1664, "POINTERS" },
	{ 0x168F, "LINE_ZERO" },
	{ 0x169E, "RESERVE" },
	{ 0x16B0, "SET_MIN" },
	{ 0x16D4, "REC_EDIT" },
	{ 0x16DB, "INDEXER_1" },
	{ 0x16E5, "CLOSE" },
	{ 0x1701, "CLOSE_2" },
	{ 0x171C, "CLOSE_STR" },
	{ 0x171E, "STR_DATA" },
	{ 0x1736, "OPEN" },
	{ 0x175D, "OPEN_2" },
	{ 0x1781, "OPEN_K" },
	{ 0x1785, "OPEN_S" },
	{ 0x1789, "OPEN_P" },
	{ 0x1793, "CAT_ETC" },
	{ 0x1795, "AUTO_LIST" },
	{ 0x17F5, "LLIST" },
	{ 0x17F9, "LIST" },
	{ 0x1855, "OUT_LINE" },
	{ 0x18B6, "NUMBER" },
	{ 0x18C1, "OUT_FLASH" },
	{ 0x18E1, "OUT_CURS" },
	{ 0x190F, "LN_FETCH" },
	{ 0x1925, "OUT_SP_2" },
	{ 0x196E, "LINE_ADDR" },
	{ 0x1980, "CP_LINES" },
	{ 0x198B, "EACH_STMT" },
	{ 0x19B8, "NEXT_ONE" },
	{ 0x19DD, "DIFFER" },
	{ 0x19E5, "RECLAIM_1" },
	{ 0x19FB, "E_LINE_NO" },
	{ 0x1A1B, "OUT_NUM_1" },
	{ 0x1B17, "LINE_SCAN" },
	{ 0x1B28, "STMT_LOOP" },
	{ 0x1B6F, "SEPARATOR" },
	{ 0x1B76, "STMT_RET" },
	{ 0x1B8A, "LINE_RUN" },
	{ 0x1B9E, "LINE_NEW" },
	{ 0x1BB2, "REM" },
	{ 0x1BB3, "LINE_END" },
	{ 0x1BBF, "LINE_USE" },
	{ 0x1BD1, "NEXT_LINE" },
	{ 0x1BEE, "CHECK_END" },
	{ 0x1BF4, "STMT_NEXT" },
	{ 0x1C0D, "CLASS_03" },
	{ 0x1C16, "JUMP_C_R" },
	{ 0x1C1F, "CLASS_01" },
	{ 0x1C22, "VAR_A_1" },
	{ 0x1C56, "VAL_FET_1" },
	{ 0x1C59, "VAL_FET_2" },
	{ 0x1C6C, "CLASS_04" },
	{ 0x1C79, "NEXT_2NUM" },
	{ 0x1C96, "PERMS" },
	{ 0x1CBE, "CLASS_09" },
	{ 0x1CDB, "CLASS_0B" },
	{ 0x1CDE, "FETCH_NUM" },
	{ 0x1CEE, "STOP" },
	{ 0x1CF0, "IF" },
	{ 0x1D03, "FOR" },
	{ 0x1D86, "LOOK_PROG" },
	{ 0x1DAB, "NEXT" },
	{ 0x1DDA, "NEXT_LOOP" },
	{ 0x1DEC, "READ_3" },
	{ 0x1E27, "DATA" },
	{ 0x1E39, "PASS_BY" },
	{ 0x1E42, "RESTORE" },
	{ 0x1E4F, "RANDOMIZE" },
	{ 0x1E5F, "CONTINUE" },
	{ 0x1E67, "GO_TO" },
	{ 0x1E7A, "OUT" },
	{ 0x1E80, "POKE" },
	{ 0x1E85, "TWO_PARAM" },
	{ 0x1E94, "FIND_INT1" },
	{ 0x1EA1, "RUN" },
	{ 0x1EAC, "CLEAR" },
	{ 0x1EED, "GO_SUB" },
	{ 0x1F05, "TEST_ROOM" },
	{ 0x1F1A, "FREE_MEM" },
	{ 0x1F23, "RETURN" },
	{ 0x1F3A, "PAUSE" },
	{ 0x1F54, "BREAK_KEY" },
	{ 0x1F60, "DEF_FN" },
	{ 0x1FC3, "UNSTACK_2" },
	{ 0x1FC9, "LPRINT" },
	{ 0x1FF5, "PRINT_CR" },
	{ 0x1FFC, "PR_ITEM_1" },
	{ 0x2045, "PR_END_Z" },
	{ 0x204E, "PR_POSN_1" },
	{ 0x2070, "STR_ALTER" },
	{ 0x2089, "INPUT" },
	{ 0x21B9, "IN_ASSIGN" },
	{ 0x21D6, "IN_CHAN_K" },
	{ 0x21E1, "CO_TEMP_1" },
	{ 0x226C, "CO_CHANGE" },
	{ 0x2294, "BORDER" },
	{ 0x22AA, "PIXEL_ADD" },
	{ 0x22CB, "POINT_SUB" },
	{ 0x22DC, "PLOT" },
	{ 0x2307, "STK_TO_BC" },
	{ 0x2314, "STK_TO_A" },
	{ 0x2320, "CIRCLE" },
	{ 0x2382, "DRAW" },
	{ 0x247D, "CD_PRMS1" },
	{ 0x24B7, "DRAW_LINE" },
	{ 0x24FB, "SCANNING" },
	{ 0x2530, "SYNTAX_Z" },
	{ 0x25AF, "S_U_PLUS" },
	{ 0x26C9, "S_LETTER" },
	{ 0x27BD, "S_FN_SBRN" },
	{ 0x28AB, "FN_SKPOVR" },
	{ 0x28B2, "LOOK_VARS" },
	{ 0x2951, "STK_F_ARG" },
	{ 0x2996, "STK_VAR" },
	{ 0x2A52, "SLICING" },
	{ 0x2AB1, "STK_ST_0" },
	{ 0x2ACC, "INT_EXP_1" },
	{ 0x2AEE, "DE,(DE+1)" },
	{ 0x2AF4, "GET_HL*DE" },
	{ 0x2AFF, "LET" },
	{ 0x2BA6, "L_ENTER" },
	{ 0x2BAF, "L_ADD$" },
	{ 0x2BC6, "L_STRING" },
	{ 0x2BEA, "L_FIRST" },
	{ 0x2BF1, "STK_FETCH" },
	{ 0x2C02, "DIM" },
	{ 0x2C88, "ALPHANUM" },
	{ 0x2C8D, "ALPHA" },
	{ 0x2C9B, "DEC_TO_FP" },
	{ 0x2D1B, "NUMERIC" },
	{ 0x2D22, "STK_DIGIT" },
	{ 0x2D28, "STACK_A" },
	{ 0x2D2B, "STACK_BC" },
	{ 0x2D3B, "INT_TO_FP" },
	{ 0x2D4F, "E_TO_FP" },
	{ 0x2D7F, "INT-FETCH" },
	{ 0x2D8C, "P_INT_STO" },
	{ 0x2DA2, "FP_TO_BC" },
	{ 0x2DC1, "LOG(2^A)" },
	{ 0x2DD5, "FP_TO_A" },
	{ 0x2DE3, "PRINT_FP" },
	{ 0x2F8B, "CA=10*A+C" },
	{ 0x2F9B, "PREP_ADD" },
	{ 0x2FBA, "FETCH_TWO" },
	{ 0x2FDD, "SHIFT_FP" },
	{ 0x3004, "ADD_BACK" },
	{ 0x300F, "SUBTRACT" },
	{ 0x3014, "ADDITION" },
	{ 0x30A9, "HL=HL*DE" },
	{ 0x30C0, "PREP_M/D" },
	{ 0x30CA, "MULTIPLY" },
	{ 0x31AF, "DIVISION" },
	{ 0x3214, "TRUNCATE" },
	{ 0x3293, "RE_ST_TWO" },
	{ 0x3297, "REL_STACK" },
	{ 0x335B, "CALCULATE" },
	{ 0x33A1, "DELETE" },
	{ 0x33A2, "FP_CALC_2" },
	{ 0x33A9, "TEST_5_SP" },
	{ 0x33B4, "STACK_NUM" },
	{ 0x33C0, "MOVE_FP" },
	{ 0x33C6, "STK_DATA" },
	{ 0x33F7, "SKIP_CONS" },
	{ 0x3406, "LOC_MEM" },
	{ 0x340F, "GET_MEM_0" },
	{ 0x341B, "STK_ZERO" },
	{ 0x342D, "ST_MEM_0" },
	{ 0x343C, "EXCHANGE" },
	{ 0x3449, "SERIES_06" },
	{ 0x346A, "ABS" },
	{ 0x346E, "NEGATE" },
	{ 0x3492, "SGN" },
	{ 0x34A5, "IN" },
	{ 0x34AC, "PEEK" },
	{ 0x34B3, "USR_NO" },
	{ 0x34BC, "USR_$" },
	{ 0x34E9, "TEST_ZERO" },
	{ 0x34F9, "GREATER_0" },
	{ 0x3501, "NOT" },
	{ 0x3506, "LESS_0" },
	{ 0x350B, "FP_O/1" },
	{ 0x351B, "OR" },
	{ 0x3524, "NO_&_NO" },
	{ 0x353B, "STR_&_EQL" },
	{ 0x353B, "NO_L_EQL" },
	{ 0x359C, "STRS_ADD" },
	{ 0x35BF, "STK_PNTRS" },
	{ 0x35C9, "CHR$" },
	{ 0x35DE, "VAL" },
	{ 0x361F, "STR$" },
	{ 0x3545, "READ_IN" },
	{ 0x3669, "CODE" },
	{ 0x3674, "LEN" },
	{ 0x367A, "DEC_JR_NZ" },
	{ 0x3686, "JUMP" },
	{ 0x368F, "JUMP_TRUE" },
	{ 0x369B, "END_CALC" },
	{ 0x36A0, "N_MOD_M" },
	{ 0x36AF, "INT" },
	{ 0x36C4, "EXP" },
	{ 0x3713, "LN" },
	{ 0x3783, "GET_ARGT" },
	{ 0x37AA, "COS" },
	{ 0x37B5, "SIN" },
	{ 0x37DA, "TAN" },
	{ 0x37E2, "ATN" },
	{ 0x3833, "ASN" },
	{ 0x3843, "ACS" },
	{ 0x384A, "SQR" },
	{ 0x3851, "TO_POWER" },
	{ 0x5C00, "KSTATE" },
	{ 0x5C08, "LAST_K" },
	{ 0x5C09, "REPDEL" },
	{ 0x5C0A, "REPPER" },
	{ 0x5C0B, "DEFADD" },
	{ 0x5C0D, "K_DATA" },
	{ 0x5C0E, "TVDATA" },
	{ 0x5C10, "STRMS" },
	{ 0x5C36, "CHAR" },
	{ 0x5C38, "RASP" },
	{ 0x5C39, "PIP" },
	{ 0x5C3A, "ERR_NR" },
	{ 0x5C3B, "FLAGS" },
	{ 0x5C3C, "TVFLAG" },
	{ 0x5C3D, "ERR_SP" },
	{ 0x5C3F, "LISTSP" },
	{ 0x5C41, "MODE" },
	{ 0x5C42, "NEWPPC" },
	{ 0x5C44, "NSPPC" },
	{ 0x5C45, "PPC" },
	{ 0x5C47, "SUBPPC" },
	{ 0x5C48, "BORDCR" },
	{ 0x5C49, "E_PPC" },
	{ 0x5C4B, "VARS" },
	{ 0x5C4D, "DEST" },
	{ 0x5C4F, "CHANS" },
	{ 0x5C51, "CURCHL" },
	{ 0x5C53, "PROG" },
	{ 0x5C55, "NXTLIN" },
	{ 0x5C57, "DATADD" },
	{ 0x5C59, "E_LINE" },
	{ 0x5C5B, "K_CUR" },
	{ 0x5C5D, "CH_ADD" },
	{ 0x5C5F, "X_PTR" },
	{ 0x5C61, "WORKSP" },
	{ 0x5C63, "STKBOT" },
	{ 0x5C65, "STKEND" },
	{ 0x5C67, "B_REG" },
	{ 0x5C68, "MEM" },
	{ 0x5C6A, "FLAGS2" },
	{ 0x5C6B, "DF_SZ" },
	{ 0x5C6C, "S_TOP" },
	{ 0x5C6E, "OLDPPC" },
	{ 0x5C70, "OSPPC" },
	{ 0x5C71, "FLAGSX" },
	{ 0x5C72, "STRLEN" },
	{ 0x5C74, "T_ADDR" },
	{ 0x5C76, "SEED" },
	{ 0x5C78, "FRAMES" },
	{ 0x5C7B, "UDG" },
	{ 0x5C7D, "COORDS" },
	{ 0x5C7F, "P_POSN" },
	{ 0x5C80, "PR_CC" },
	{ 0x5C81, "UNUSED" },
	{ 0x5C82, "ECHO_E" },
	{ 0x5C84, "DF_CC" },
	{ 0x5C86, "DFCCL" },
	{ 0x5C88, "S_POSN" },
	{ 0x5CBA, "SPOSNL" },
	{ 0x5C8C, "SCR_CT" },
	{ 0x5C8D, "ATTR_P" },
	{ 0x5C8E, "MASK_P" },
	{ 0x5C8F, "ATTR_T" },
	{ 0x5C90, "MASK_T" },
	{ 0x5C91, "P_FLAG" },
	{ 0x5C92, "MEMBOT" },
	{ 0x5CB0, "INTERR" },
	{ 0x5C82, "RAMTOP" },
	{ 0x5CB4, "P_RAMT" },
	0, NULL
};

const char *Get48KRomAddressLabel(unsigned short address)
{
	AddressLabel *pCurLabel = addressLabels_48KRom;
	
	while ( pCurLabel->label != NULL && address >= pCurLabel->address )
	{
		if ( pCurLabel->address == address )
		{
			return pCurLabel->label;
		}
		
		pCurLabel++;
	}
		
	return NULL;
}
